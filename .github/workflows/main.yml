name: Node.js Application Build and Deploy

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Node.js 버전 설정
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # 4. Docker 로그인 (GitHub Container Registry)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

      # 5. Docker 이미지 빌드 및 Push
      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile  # Dockerfile 경로
          push: true
          tags: ghcr.io/${{ github.actor }}/unirun-blockchain-server:v1.0  # 이미지 태그 생성

  deploy-main:
    runs-on: ubuntu-latest
    needs: build  # build 작업 완료 후 실행
    if: github.ref == 'refs/heads/main'  # main 브랜치에서만 실행

    steps:
      # 6. EC2 서버로 배포
      - name: Deploy to EC2 Main
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            echo "Current working directory:"
            pwd

            echo ${{ secrets.CONTAINER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Docker Compose 실행
            docker-compose pull
            docker-compose down
            docker-compose up -d nodejs-app

  deploy-develop:
    runs-on: ubuntu-latest
    needs: build  # build 작업 완료 후 실행
    if: github.ref == 'refs/heads/develop'  # develop 브랜치에서만 실행

    steps:
      # 7. EC2 서버로 배포
      - name: Deploy to EC2 Develop
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_DEV_KEY }}
          port: 22
          script: |
            echo "Current working directory:"
            pwd

            echo ${{ secrets.CONTAINER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Docker Compose 실행
            docker-compose pull
            docker-compose down
            docker-compose up -d nodejs-app
